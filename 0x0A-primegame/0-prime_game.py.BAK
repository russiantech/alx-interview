#!/usr/bin/python3
def sieve_of_eratosthenes(max_n):
    is_prime = [True] * (max_n + 1)
    p = 2
    while p * p <= max_n:
        if is_prime[p]:
            for i in range(p * p, max_n + 1, p):
                is_prime[i] = False
        p += 1
    prime_list = [p for p in range(2, max_n + 1) if is_prime[p]]
    return prime_list

def calculate_winners(max_n):
    primes = sieve_of_eratosthenes(max_n)
    prime_set = set(primes)
    dp = [0] * (max_n + 1)
    for i in range(2, max_n + 1):
        if i in prime_set:
            dp[i] = 1
        else:
            for prime in primes:
                if prime > i:
                    break
                if dp[i - prime] == 0:
                    dp[i] = 1
                    break
    return dp

def isWinner(x, nums):
    if x < 1 or not nums:
        return None
    
    max_n = max(nums)
    dp = calculate_winners(max_n)
    
    maria_wins = 0
    ben_wins = 0
    
    for n in nums:
        if dp[n] == 1:
            maria_wins += 1
        else:
            ben_wins += 1
    
    if maria_wins > ben_wins:
        return "Maria"
    elif ben_wins > maria_wins:
        return "Ben"
    else:
        return None

# Testing with given example
if __name__ == "__main__":
    print("Winner: {}".format(isWinner(5, [2, 5, 1, 4, 3])))
